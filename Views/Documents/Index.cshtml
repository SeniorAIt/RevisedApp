@model WorkbookManagement.Controllers.DocumentsIndexVm
@using WorkbookManagement.Models
@using System.ComponentModel.DataAnnotations
@using System.Reflection
@{
    ViewData["Title"] = "Company Documents";
    bool showGrouped = Model.IsSuperAdmin && !Model.FilterCompanyId.HasValue && (Model.Groups?.Any() ?? false);

    string GetBadgeClass(string ext) => ext.ToLowerInvariant() switch
    {
        ".pdf" => "bg-danger",
        ".doc" or ".docx" => "bg-primary",
        ".xls" or ".xlsx" or ".csv" => "bg-success",
        ".png" or ".jpg" or ".jpeg" or ".gif" => "bg-info",
        ".txt" => "bg-secondary",
        _ => "bg-dark"
    };

    var kindOptions = Enum.GetValues(typeof(DocumentKind)).Cast<DocumentKind>().ToList();

    string Show(DocumentKind k)
    {
        var mem = typeof(DocumentKind).GetMember(k.ToString()).FirstOrDefault();
        var disp = mem?.GetCustomAttribute<DisplayAttribute>();
        return disp?.Name ?? k.ToString();
    }
}

<div class="d-flex align-items-center justify-content-between mb-3">
    <h2 class="mb-0">Documents</h2>

    @* SuperAdmin company switcher *@
    @if (Model.IsSuperAdmin)
    {
        <form asp-action="Index" method="get" class="d-flex gap-2">
            <select name="companyId" class="form-select form-select-sm" style="min-width:260px"
                    onchange="this.form.submit()">
                <option value="">All companies (dashboard)</option>
                @foreach (var c in Model.Companies)
                {
                    <option value="@c.Id" selected="@(Model.FilterCompanyId == c.Id ? "selected" : null)">
                        @c.Name
                    </option>
                }
            </select>
            <noscript><button class="btn btn-sm btn-outline-primary" type="submit">Go</button></noscript>
        </form>
    }
</div>

@if (showGrouped)
{
    <!-- SuperAdmin: grouped card view across all companies -->
    <div class="row g-3">
        @foreach (var g in Model.Groups)
        {
            <div class="col-12 col-md-6 col-xl-4">
                <div class="card shadow-sm h-100 border-0">
                    <div class="card-header bg-white d-flex justify-content-between align-items-center">
                        <div class="fw-semibold text-truncate" title="@g.CompanyName">
                            <span class="me-2">🏢</span>@g.CompanyName
                        </div>
                        <span class="badge bg-primary">@g.Docs.Count</span>
                    </div>
                    <div class="card-body">
                        @if (g.Docs.Count == 0)
                        {
                            <div class="text-muted">No documents yet.</div>
                        }
                        else
                        {
                            <div class="list-group list-group-flush">
                                @foreach (var d in g.Docs.Take(5))
                                {
                                    var ext = System.IO.Path.GetExtension(d.OriginalFileName ?? "");
                                    <div class="list-group-item px-0 d-flex justify-content-between align-items-center">
                                        <div class="text-truncate" title="@d.OriginalFileName" style="max-width: 60%;">
                                            <span class="badge @GetBadgeClass(ext) me-2">@ext.ToUpper()</span>
                                            @d.OriginalFileName
                                            <div class="small text-muted">
                                                @(d.DocumentType == DocumentKind.Unknown ? "-" : Show(d.DocumentType)) @(" • ")
                                                @d.UploadedAtUtc.ToLocalTime().ToString("yyyy-MM-dd HH:mm") • @FormatSize(d.SizeBytes)
                                            </div>
                                        </div>
                                        <div class="ms-2 d-flex gap-2">
                                            <a class="btn btn-sm btn-outline-secondary" asp-action="View" asp-route-id="@d.Id" target="_blank">View</a>
                                            <a class="btn btn-sm btn-outline-secondary" asp-action="Download" asp-route-id="@d.Id">Download</a>
                                            <a class="btn btn-sm btn-outline-primary" asp-action="Edit" asp-route-id="@d.Id">Edit</a>
                                        </div>
                                    </div>
                                }
                            </div>
                            @if (g.Docs.Count > 5)
                            {
                                <div class="mt-2">
                                    <a class="btn btn-sm btn-link p-0"
                                       asp-action="Index" asp-route-companyId="@g.CompanyId">
                                        View all documents for this company →
                                    </a>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <!-- Flat view: used for company users and SuperAdmin scoped to a specific company -->
    <!-- Filter bar -->
    <form asp-action="Index" method="get" class="card border-0 shadow-sm mb-3">
        <div class="card-body">
            <div class="row g-2 align-items-end">
                @if (Model.IsSuperAdmin)
                {
                    <input type="hidden" name="companyId" value="@(Model.FilterCompanyId?.ToString())" />
                }
                <div class="col-12 col-md-4">
                    <label class="form-label">Search</label>
                    <input name="q" value="@Model.Q" class="form-control" placeholder="Filename" />
                </div>
                <div class="col-12 col-md-3">
                    <label class="form-label">Document Type</label>
                    <select name="kind" class="form-select">
                        <option value="">Any</option>
                        @foreach (var k in kindOptions)
                        {
                            var sel = (Model.Kind.HasValue && Model.Kind.Value == k) ? "selected" : null;
                            <option value="@k" selected="@sel">@Show(k)</option>
                        }
                    </select>
                </div>
                <div class="col-6 col-md-2">
                    <label class="form-label">From</label>
                    <input type="date" name="from" value="@(Model.From?.ToString("yyyy-MM-dd"))" class="form-control" />
                </div>
                <div class="col-6 col-md-2">
                    <label class="form-label">To</label>
                    <input type="date" name="to" value="@(Model.To?.ToString("yyyy-MM-dd"))" class="form-control" />
                </div>
                <div class="col-12 col-md-1 d-grid">
                    <button class="btn btn-primary" type="submit">Filter</button>
                </div>
            </div>
            <div class="mt-2">
                <a asp-action="Index" asp-route-companyId="@(Model.FilterCompanyId)" class="small">Clear filters</a>
            </div>
        </div>
    </form>

    <!-- Upload -->
    <form asp-action="Upload" method="post" enctype="multipart/form-data" class="mb-3">
        @Html.AntiForgeryToken()
        @if (Model.IsSuperAdmin)
        {
            <input type="hidden" name="companyId" value="@(Model.FilterCompanyId?.ToString())" />
        }
        <div class="row g-2 align-items-center">
            <div class="col-12 col-md-auto">
                <input type="file" name="file" class="form-control" required />
            </div>
            <div class="col-12 col-md-auto">
                <select name="documentType" class="form-select" required>
                    <option value="">Select type…</option>
                    @foreach (var k in kindOptions.Where(x => x != DocumentKind.Unknown))
                    {
                        <option value="@k">@Show(k)</option>
                    }
                </select>
            </div>
            <div class="col-12 col-md-auto">
                <button class="btn btn-primary" type="submit">Upload</button>
            </div>
        </div>
        <small class="text-muted d-block mt-1">
            Allowed: pdf, doc/x, xls/x, csv, txt, png, jpg/jpeg, gif. Max 25 MB.
        </small>
    </form>

    <!-- Table -->
    <div class="card shadow-sm border-0">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover table-sm align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>File</th>
                            <th>Type</th>
                            <th>Size</th>
                            <th>Content-Type</th>
                            <th>Uploaded</th>
                            <th>By</th>
                            <th class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var d in (Model.Flat ?? new List<CompanyDocument>()))
                        {
                            var ext = System.IO.Path.GetExtension(d.OriginalFileName ?? "");
                            <tr>
                                <td class="text-truncate" style="max-width: 360px;" title="@d.OriginalFileName">
                                    <span class="badge @GetBadgeClass(ext) me-2">@ext.ToUpper()</span>
                                    @d.OriginalFileName
                                </td>
                                <td>@(d.DocumentType == DocumentKind.Unknown ? "-" : Show(d.DocumentType))</td>
                                <td>@FormatSize(d.SizeBytes)</td>
                                <td>@(string.IsNullOrWhiteSpace(d.ContentType) ? "-" : d.ContentType)</td>
                                <td>@d.UploadedAtUtc.ToLocalTime().ToString("yyyy-MM-dd HH:mm")</td>
                                <td class="text-truncate" style="max-width: 220px;" title="@d.UploadedByUser?.Email">
                                    @d.UploadedByUser?.Email
                                </td>
                                <td class="text-end">
                                    <a class="btn btn-outline-secondary btn-sm" asp-action="View" asp-route-id="@d.Id" target="_blank">View</a>
                                    <a class="btn btn-outline-secondary btn-sm" asp-action="Download" asp-route-id="@d.Id">Download</a>
                                    <a class="btn btn-outline-primary btn-sm" asp-action="Edit" asp-route-id="@d.Id">Edit</a>
                                    <form asp-action="Delete" asp-route-id="@d.Id" method="post" class="d-inline" onsubmit="return confirm('Delete this file?');">
                                        @Html.AntiForgeryToken()
                                        <button class="btn btn-outline-danger btn-sm" type="submit">Delete</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

@functions {
    string FormatSize(long bytes)
    {
        string[] u = { "B", "KB", "MB", "GB" };
        double v = bytes; int i = 0;
        while (v >= 1024 && i < u.Length - 1) { v /= 1024; i++; }
        return $"{v:0.##} {u[i]}";
    }
}
