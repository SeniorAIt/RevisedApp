@model WorkbookManagement.Models.CompanyDocument
@using WorkbookManagement.Models
@using System.ComponentModel.DataAnnotations
@using System.Reflection
@{
    ViewData["Title"] = "Edit Document";
    var kinds = Enum.GetValues(typeof(DocumentKind)).Cast<DocumentKind>().ToList();

    string FmtSize(long b)
    {
        string[] u = { "B", "KB", "MB", "GB", "TB" }; double s = b; int i = 0;
        while (s >= 1024 && i < u.Length - 1) { s /= 1024; i++; }
        return $"{s:0.#} {u[i]}";
    }

    string Show(DocumentKind k)
    {
        var mem = typeof(DocumentKind).GetMember(k.ToString()).FirstOrDefault();
        var disp = mem?.GetCustomAttribute<DisplayAttribute>();
        return disp?.Name ?? k.ToString();
    }
}

@section Styles {
    <style>
        .meta small {
            color: #6c757d;
        }

        .meta .pill {
            display: inline-block;
            padding: .15rem .5rem;
            border: 1px solid #e5e7eb;
            border-radius: 999px;
            margin-right: .35rem;
        }
    </style>
}

<h2 class="mb-3">Edit Document</h2>

<div class="card shadow-sm border-0">
    <div class="card-body">
        <div class="mb-3 meta">
            <div><strong>@(Model.OriginalFileName ?? "document")</strong></div>
            <small>
                <span class="pill">@FmtSize(Model.SizeBytes)</span>
                @if (!string.IsNullOrWhiteSpace(Model.ContentType))
                {
                    <span class="pill">@Model.ContentType</span>
                }
                <span class="pill">Uploaded @Model.UploadedAtUtc.ToLocalTime().ToString("yyyy/MM/dd HH:mm")</span>
                @if (Model.UploadedByUser != null)
                {
                    <span class="pill">@Model.UploadedByUser.Email</span>
                }
            </small>
        </div>

        <form asp-action="Edit" method="post" class="row g-3">
            @Html.AntiForgeryToken()
            <input type="hidden" name="id" value="@Model.Id" />

            <div class="col-md-4">
                <label class="form-label">Document Type</label>
                <select name="documentType" class="form-select" required>
                    @foreach (var k in kinds)
                    {
                        <option value="@k" selected="@(Model.DocumentType == k ? "selected" : null)">@Show(k)</option>
                    }
                </select>
                <div class="form-text">Choose the correct category for easier filtering.</div>
            </div>

            <div class="col-md-8">
                <label class="form-label">Notes (optional)</label>
                <textarea name="notes" class="form-control" rows="3">@Model.Notes</textarea>
                <div class="form-text">Add any context or references for admins.</div>
            </div>

            <div class="col-12 d-flex gap-2">
                <button class="btn btn-primary" type="submit">Save</button>
                <a class="btn btn-secondary" asp-action="Index" asp-route-companyId="@Model.CompanyId">Cancel</a>
                <a class="btn btn-outline-secondary" asp-action="View" asp-route-id="@Model.Id" target="_blank" rel="noopener">Preview</a>
                <a class="btn btn-outline-secondary" asp-action="Download" asp-route-id="@Model.Id">Download</a>
            </div>
        </form>
    </div>
</div>
