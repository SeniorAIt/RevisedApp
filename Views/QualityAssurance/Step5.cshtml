@model WorkbookManagement.Models.QaGEL
@{
    ViewData["Title"] = "QA — Page 5 of 13 (GEL)";
    var id = (int)ViewBag.Id;
    string P(double p) => (p * 100).ToString("0.0").Replace(".", ",") + "%";
}

<style>
    .box {
        border: 1px solid #bfbfbf;
        border-radius: 10px;
        padding: 16px;
        margin-bottom: 16px;
        background: #fff;
    }

        .box h6 {
            margin: 0 0 12px;
            font-weight: 700;
            text-transform: uppercase;
        }

    .table-wrapper {
        max-height: 60vh;
        overflow-y: auto;
        overflow-x: auto;
        border: 1px solid #dee2e6;
        background: #fff;
    }

        .table-wrapper thead th {
            position: sticky;
            top: 0;
            z-index: 2;
            background: #f8f9fa;
        }

    .save-bar {
        box-shadow: 0 -4px 10px rgba(0,0,0,.05);
    }

    .save-spacer {
        height: 64px;
    }

    .line-input {
        border: none;
        border-bottom: 2px dotted #6c757d;
        border-radius: 0;
        background: transparent;
    }

        .line-input:focus {
            box-shadow: none;
            border-bottom-color: #198754;
            background: transparent;
        }

    .gel-table td, .gel-table th {
        font-size: .9rem;
    }

    .line-through {
        text-decoration: line-through;
        text-decoration-thickness: 2px;
        text-decoration-color: #d39e00;
    }
</style>

<div class="container mt-3">
    <h6 class="text-uppercase fw-bold mb-2">GEL:- GOVERNANCE, ETHICS &amp; LEADERSHIP</h6>

    <form asp-action="Step5" asp-route-id="@id" method="post" id="gelForm">
        @Html.AntiForgeryToken()

        <div class="row g-3 align-items-end">
            <div class="col-md-6">
                <div class="row g-2">
                    <div class="col-12">
                        <label class="form-label small mb-0">ORGANISATION:</label>
                        <input asp-for="Organisation" class="form-control line-input" />
                    </div>
                    <div class="col-8">
                        <label class="form-label small mb-0">DEPARTMENT:</label>
                        <input asp-for="Department" class="form-control line-input" />
                    </div>
                    <div class="col-4">
                        <label class="form-label small mb-0">APPETD REG No.:</label>
                        <input asp-for="AppetdRegNo" class="form-control line-input" />
                    </div>
                    <div class="col-6">
                        <label class="form-label small mb-0">ASSESSMENT DATE:</label>
                        <input asp-for="AssessmentDate" type="date" class="form-control line-input" />
                    </div>
                    <div class="col-3">
                        <label class="form-label small mb-0">CA VERIFICATION:</label>
                        <input asp-for="CaVerification" type="date" class="form-control line-input" />
                    </div>
                    <div class="col-3">
                        <label class="form-label small mb-0">RE-ASSESSMENT:</label>
                        <input asp-for="ReassessmentDate" type="date" class="form-control line-input" />
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="p-2 border">
                            <div class="d-flex justify-content-between">
                                <div><strong>CRITERIA:</strong> @Model.Criteria</div>
                                <div class="small">
                                    <div>Compliance: <span id="compCount">@Model.Compliant</span> &nbsp; <span id="compPct">@P(Model.Percent)</span></div>
                                    <div>Non-Compliance: <span id="nonCompCount">@Model.NotCompliant</span> &nbsp; <span id="nonCompPct">@P(Model.Criteria == 0 ? 0 : (double)Model.NotCompliant / Model.Criteria)</span></div>
                                    <div>Not Applicable: <span>@Model.NotApplicable</span></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="p-2 border text-sm">
                            <div><span class="badge bg-success">3</span> Compliant</div>
                            <div><span class="badge bg-danger">2</span> Not Compliant</div>
                            <div><span class="badge bg-warning text-dark">1</span> Not Applicable</div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="p-2 border text-sm">
                            CI = Compliance Indicator<br />
                            CA = Corrective Action<br />
                            CO = Close Out
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="table-wrapper mt-3">
            <table class="table table-sm table-bordered align-middle gel-table mb-0">
                <thead class="table-light">
                    <tr>
                        <th style="width:6%">CAT</th>
                        <th style="width:24%">REQUIREMENT / QUESTION</th>
                        <th style="width:8%">CODE</th>
                        <th style="width:36%">EVIDENCE • ACTION</th>
                        <th style="width:6%" class="text-center">CI</th>
                        <th style="width:18%">CORRECTIVE ACTION / IMPROVEMENT</th>
                        <th style="width:12%">CA ASSIGNED TO</th>
                        <th style="width:10%">CO DATE</th>
                        <th style="width:5%" class="text-center">CO</th>
                        <th style="width:12%">VERIFIED BY</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Rows != null && Model.Rows.Count > 0)
                    {
                        for (int i = 0; i < Model.Rows.Count; i++)
                        {
                            var r = Model.Rows[i];

                            if (i == 0 || Model.Rows[i].PartCode != Model.Rows[i - 1].PartCode)
                            {
                                var part = Model.Parts.FirstOrDefault(p => p.PartCode == r.PartCode);
                                <tr class="table-secondary">
                                    <td class="fw-bold">@r.PartCode</td>
                                    <td colspan="9">
                                        <div class="fw-bold">@part?.Title</div>
                                        <div class="small text-muted">@part?.Description</div>
                                    </td>
                                </tr>
                            }

                            <tr>
                                <td>@r.PartCode</td>
                                <td>@r.Requirement</td>
                                <td>@r.Code</td>
                                <td>@r.Action</td>
                                <td class="text-center">
                                    <div class="d-inline-flex align-items-center">
                                        <select asp-for="Rows[i].CI" class="form-select form-select-sm ci-select" style="min-width:70px;">
                                            <option value=""></option>
                                            <option value="3">3</option>
                                            <option value="2">2</option>
                                            <option value="1">1</option>
                                        </select>
                                        <i class="ci-icon ms-2" style="display:none; font-size:1.3rem;"></i>
                                    </div>
                                </td>
                                <td><input asp-for="Rows[i].CorrectiveAction" class="form-control form-control-sm" /></td>
                                <td><input asp-for="Rows[i].AssignedTo" class="form-control form-control-sm" /></td>
                                <td><input asp-for="Rows[i].CODate" type="date" class="form-control form-control-sm" /></td>
                                <td class="text-center"><input asp-for="Rows[i].CO" class="form-check-input" /></td>
                                <td><input asp-for="Rows[i].VerifiedBy" class="form-control form-control-sm" /></td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr><td colspan="10" class="text-muted">No rows defined yet.</td></tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="save-spacer"></div>

        <div class="save-bar fixed-bottom border-top bg-white">
            <div class="container d-flex justify-content-between py-2">
                <div>
                    <button class="btn btn-outline-secondary btn-sm" name="nav" value="prev" type="submit">Previous</button>
                </div>
                <div>
                    <button class="btn btn-outline-primary btn-sm me-2" name="nav" value="save" type="submit">Save Draft</button>
                    <button class="btn btn-primary btn-sm" name="nav" value="next" type="submit">Next</button>
                </div>
            </div>
        </div>
    </form>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.11.3/font/bootstrap-icons.min.css">
}

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const compCountEl    = document.getElementById("compCount");
            const compPctEl      = document.getElementById("compPct");
            const nonCompCountEl = document.getElementById("nonCompCount");
            const nonCompPctEl   = document.getElementById("nonCompPct");

            function pct(n) { return (Math.round(n * 10) / 10).toFixed(1).replace(".", ",") + "%"; }

            function updateRowVisuals(select) {
                const row = select.closest("tr");
                const icon = row.querySelector(".ci-icon");
                const cell = row.querySelector("td:nth-child(4)");
                icon.className = "ci-icon ms-2";
                icon.style.display = "inline";
                if (cell) { cell.classList.remove("line-through"); cell.style.color = ""; }

                switch (select.value) {
                    case "3": icon.classList.add("bi","bi-check-circle-fill","text-success"); if (cell) cell.style.color = "green"; break;
                    case "2": icon.classList.add("bi","bi-x-circle-fill","text-danger");     if (cell) cell.style.color = "red";   break;
                    case "1": icon.classList.add("bi","bi-exclamation-circle-fill","text-warning"); if (cell) { cell.style.color = "goldenrod"; cell.classList.add("line-through"); } break;
                    default:  icon.style.display = "none"; break;
                }
            }

            function recalcSummary() {
                const selects = Array.from(document.querySelectorAll(".ci-select"));
                let compliant = 0, nonCompliant = 0, applicable = 0;
                selects.forEach(s => {
                    if (s.value === "3") { compliant++; applicable++; }
                    else if (s.value === "2") { nonCompliant++; applicable++; }
                });

                if (compCountEl) compCountEl.textContent = compliant;
                if (nonCompCountEl) nonCompCountEl.textContent = nonCompliant;

                if (applicable > 0) {
                    if (compPctEl) compPctEl.textContent = pct((compliant / applicable) * 100);
                    if (nonCompPctEl) nonCompPctEl.textContent = pct((nonCompliant / applicable) * 100);
                } else {
                    if (compPctEl) compPctEl.textContent = "0,0%";
                    if (nonCompPctEl) nonCompPctEl.textContent = "0,0%";
                }
            }

            document.querySelectorAll(".ci-select").forEach(s => { updateRowVisuals(s); });
            recalcSummary();
            document.querySelectorAll(".ci-select").forEach(s => {
                s.addEventListener("change", function () { updateRowVisuals(s); recalcSummary(); });
            });
        });
    </script>
}
